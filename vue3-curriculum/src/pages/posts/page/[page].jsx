import Head from 'next/head'
import Link from 'next/link';
import Chapter from '../../../../components/Chapters/Chapter';
import Pagination from '../../../../components/Pagination/Pagination';
import Tag from '../../../../components/Tag/Tag';
import { getAllPosts, getAllTags, getNumberOfPages, getPostsByPage, getPostsTopPage } from '../../../../lib/notionAPI';

export const getStaticPaths = async () => {
  const numberOfPage = await getNumberOfPages();

  let params = [];
  for (let i = 1; i <= numberOfPage; i++) {
    params.push({ params: { page: i.toString() } })
  }

  return {
    paths: params,
    fallback: "blocking",
  }
}

export const getStaticProps = async (context) => {
  const currentPage = context.params?.page;
  const postsByPage = await getPostsByPage(parseInt(currentPage.toString(), 10));

  const numberOfPage = await getNumberOfPages();

  const allTags = await getAllTags();

  return {
    props: {
      postsByPage,
      numberOfPage,
      allTags
    },
    revalidate: 60 * 60 * 12,
  }
}

const CurriculumPageList = ({ postsByPage, numberOfPage, allTags }) => {
  return (
    <>
      <Head>
        <title>VueCurriculum-Expert</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className='container'>
        <Link href='/' className='home_link'>
          <h1 className='common_pageTitle'>VueCurriculum-Expert</h1>
        </Link>
        {postsByPage.map((post) => (
          <div key={post.id}>
            <Chapter
              title={post.title}
              description={post.description}
              date={post.date}
              tags={post.tags}
              slug={post.slug}
              isPaginationPage={true}
            />
          </div>
        ))}
        <Pagination numberOfPage={numberOfPage} tag={""} />
        <Tag tags={allTags} />
      </main>
    </>
  )
};

export default CurriculumPageList;
